using Library;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace ObligatorioAppConsole
{
public abstract class Actividad: IValidable, IComparable<Actividad>
{
#region Atributos
int id;
string nombre;
string descripcion;
DateTime fechaRealizacion;
int cantMaxPersonas;
int edadMinima;
double costo;
static int contadorId = 0;
#endregion
#region Propiedades
/* public int Id { get => id; }
public string Nombre { get => nombre; }
public string Descripcion { get => descripcion; }*/
public DateTime FechaRealizacion { get => fechaRealizacion;}
public int CantMaxPersonas { get => cantMaxPersonas; }
public int EdadMinima { get => edadMinima; }
public double Costo { get => costo; }
#endregion
#region Constructor
public Actividad(string nombre, string descripcion, DateTime fechaRealizacion, int cantMaxPersonas, int edadMinima, double costo)
{
this.nombre = nombre;
this.descripcion = descripcion;
this.fechaRealizacion = fechaRealizacion;
this.cantMaxPersonas = cantMaxPersonas;
this.edadMinima = edadMinima;
this.costo = costo;
id = ++contadorId;
}
#endregion
#region Métodos
public virtual void ValidarDatos()
{
if (String.IsNullOrEmpty(nombre) || String.IsNullOrEmpty(descripcion) || this.nombre.Length > 25)
throw new Exception("Nombre y/o descripción no pueden ser nulos o vacíos y el nombre no puede tener un largo mayor a 25 caracteres");
if (this.fechaRealizacion < DateTime.Now) throw new Exception("Fecha de realización anterior al día de hoy");
if (this.costo < 0) throw new Exception("El costo no puede ser menor a 0");
}
/// <summary>
/// Sobreescribe el Tostring para acceder a los atributos
/// </summary>
/// <returns></returns>
public override string ToString()
{
return $"Id: {id}\nNombre: {nombre}\nDescripción: {descripcion}\nFecha: {fechaRealizacion}\nCantidad máxima de personas: {cantMaxPersonas}\nEdad mínima: {edadMinima}\nCosto: {costo}\n";
}
/// <summary>
/// Ordena de manera descendente por la propiedad costo
/// </summary>
/// <param name="other"></param>
/// <returns></returns>
public int CompareTo (Actividad? other)
{
return costo.CompareTo(other.Costo)*-1;
}
#endregion
}
}
